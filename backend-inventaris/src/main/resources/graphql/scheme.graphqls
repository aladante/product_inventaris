schema {
    query: Query
    mutation: Mutation
}

type Query {
    listUser: [User]
    getUser(id: ID!): User

    listRole: [String]
    getRole(id: ID!): String! 

	# Product 
	getProduct : Product!
	getProducts: [Product]!

	# location
	getLocation: Location!
	getLocations: [Location]!

	# hello: String
	# helllo: String
}

type Mutation {
    login(input: AuthRequest!) : JwtResponse!
    createUser(input: SignupRequest!) : User!
    deleteUser(id: ID!) : Boolean!

	createProduct(input: ProductRequest!) : Product!
	createLocation(input: LocationRequest!) : Location!
}

type User {
    id: ID!
    username: String!
    password: String!
}

type Product{
    id: ID!
    name: String!
    expireDate: String
}

type Location{
    name: String!
    street: String!
    number: Int!
    city: String!
}

type JwtResponse {
    token: String!
    type: String!
}

input SignupRequest {
    username: String!
    password: String!
	role: [String]
}

input AuthRequest {
    username: String!
    password: String!
}

input ProductRequest{
    name: String!
    expireDate: String
}

input LocationRequest{
    name: String!
    street: String!
    number: Int!
    city: String!
}
